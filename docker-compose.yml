version: '3.4'

volumes:
  mysql_data: {}

services:

   api:
     build:
       context: ./
       args:
         - application=service-status
         - friendly=Service Status API
         - build_hash=${BUILD_HASH:-localbuild_hashmissing}
         - build_user=${BUILD_USER:-unknown}
         - build_branch=${BUILD_BRANCH:-nobranch}
         - build_number=${BUILD_NUMBER:-1.0.0}
         - build_group=${BUILD_GROUP:-nogroupspecified}
         - repo_url=${REPO_URL}
         - vendor=${VENDOR:-Chad Grant}
         - builder_img=${REGISTRY}/chadgrant/base:golang-1.13.5-alpine
         - runtime_img=${REGISTRY}/chadgrant/base:alpine-3.11.2        
     image: ${REGISTRY}/chadgrant/service-status-api:${BUILD_NUMBER:-1.0.0}
     container_name: service_status_api
     restart: unless-stopped
     ports:
       - 5010:8080
     healthcheck:
        test: "curl -f http://localhost:8080/health/liveness || exit 1"
        interval: 30s
        timeout: 2s
        retries: 3
        start_period: 5s
     environment:
      MYSQL_DATABASE: service_status
      MYSQL_USER: docker
      MYSQL_PASSWORD: password
      MYSQL_HOST: data
      MYSQL_PORT: 3306
        
   tests:
      build:
       context: ./
       dockerfile: Dockerfile.tests
       args:
        - runtime_img=${REGISTRY}/chadgrant/golang-testing:1.13.5-alpine
      image: ${REGISTRY}/chadgrant/service-status-api-test:${BUILD_NUMBER:-1.0.0}
      container_name: service_status_api_test
      depends_on:
        - data
        - api
      environment:
        MYSQL_DATABASE: service_status
        MYSQL_USER: docker
        MYSQL_PASSWORD: password
        MYSQL_HOST: data
        MYSQL_PORT: 3306        
        TEST_INTEGRATION: 1

  #  ui:
  #     build:
  #       context: ./ui
  #     image: ${REGISTRY}/chadgrant/service-status-ui:${BUILD_NUMBER:-1.0.0}
  #     container_name: service_status_ui
  #     restart: unless-stopped
  #     ports:
  #      - 6100:80
  #     environment:
  #       API_ENDPOINT: "http://localhost:5010"

   data:
      build:
       context: ./db
      image: ${REGISTRY}/chadgrant/service-status-data:${BUILD_NUMBER:-1.0.0}
      container_name: service_status_data
      restart: unless-stopped
      ports:
        - 3306:3306
      volumes:
        - mysql_data:/var/lib/mysql       
      environment:
        MYSQL_ROOT_PASSWORD: rootpassword
        MYSQL_DATABASE: service_status
        MYSQL_USER: docker
        MYSQL_PASSWORD: password         