// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: servicestatus.proto

package generated

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Service struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Friendly             string     `protobuf:"bytes,2,opt,name=friendly,proto3" json:"friendly,omitempty"`
	Active               bool       `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Status               string     `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Sort                 int32      `protobuf:"varint,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Key                  string     `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	Created              *time.Time `protobuf:"bytes,7,opt,name=created,proto3,stdtime" json:"created,omitempty"`
	Updated              *time.Time `protobuf:"bytes,8,opt,name=updated,proto3,stdtime" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{0}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Service.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return m.Size()
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetFriendly() string {
	if m != nil {
		return m.Friendly
	}
	return ""
}

func (m *Service) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Service) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Service) GetSort() int32 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *Service) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Service) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Service) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (*Service) XXX_MessageName() string {
	return "Service"
}

type GetServicesRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,proto3" json:"page_size,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServicesRequest) Reset()         { *m = GetServicesRequest{} }
func (m *GetServicesRequest) String() string { return proto.CompactTextString(m) }
func (*GetServicesRequest) ProtoMessage()    {}
func (*GetServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{1}
}
func (m *GetServicesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetServicesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesRequest.Merge(m, src)
}
func (m *GetServicesRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesRequest proto.InternalMessageInfo

func (m *GetServicesRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetServicesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetServicesRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (*GetServicesRequest) XXX_MessageName() string {
	return "GetServicesRequest"
}

type ServicesPaged struct {
	Results              []*Service `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Page                 int32      `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32      `protobuf:"varint,3,opt,name=page_size,proto3" json:"page_size,omitempty"`
	Total                int32      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Links                *Links     `protobuf:"bytes,5,opt,name=links,proto3" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ServicesPaged) Reset()         { *m = ServicesPaged{} }
func (m *ServicesPaged) String() string { return proto.CompactTextString(m) }
func (*ServicesPaged) ProtoMessage()    {}
func (*ServicesPaged) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{2}
}
func (m *ServicesPaged) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServicesPaged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServicesPaged.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ServicesPaged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServicesPaged.Merge(m, src)
}
func (m *ServicesPaged) XXX_Size() int {
	return m.Size()
}
func (m *ServicesPaged) XXX_DiscardUnknown() {
	xxx_messageInfo_ServicesPaged.DiscardUnknown(m)
}

var xxx_messageInfo_ServicesPaged proto.InternalMessageInfo

func (m *ServicesPaged) GetResults() []*Service {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *ServicesPaged) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ServicesPaged) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ServicesPaged) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ServicesPaged) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (*ServicesPaged) XXX_MessageName() string {
	return "ServicesPaged"
}

type Environment struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Friendly             string     `protobuf:"bytes,2,opt,name=friendly,proto3" json:"friendly,omitempty"`
	Active               bool       `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Sort                 int32      `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Key                  string     `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	Created              *time.Time `protobuf:"bytes,6,opt,name=created,proto3,stdtime" json:"created,omitempty"`
	Updated              *time.Time `protobuf:"bytes,7,opt,name=updated,proto3,stdtime" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Environment) Reset()         { *m = Environment{} }
func (m *Environment) String() string { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()    {}
func (*Environment) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{3}
}
func (m *Environment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Environment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Environment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Environment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Environment.Merge(m, src)
}
func (m *Environment) XXX_Size() int {
	return m.Size()
}
func (m *Environment) XXX_DiscardUnknown() {
	xxx_messageInfo_Environment.DiscardUnknown(m)
}

var xxx_messageInfo_Environment proto.InternalMessageInfo

func (m *Environment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Environment) GetFriendly() string {
	if m != nil {
		return m.Friendly
	}
	return ""
}

func (m *Environment) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Environment) GetSort() int32 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *Environment) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Environment) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Environment) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (*Environment) XXX_MessageName() string {
	return "Environment"
}

type EnvironmentsPaged struct {
	Results              []*Environment `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EnvironmentsPaged) Reset()         { *m = EnvironmentsPaged{} }
func (m *EnvironmentsPaged) String() string { return proto.CompactTextString(m) }
func (*EnvironmentsPaged) ProtoMessage()    {}
func (*EnvironmentsPaged) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{4}
}
func (m *EnvironmentsPaged) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnvironmentsPaged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnvironmentsPaged.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EnvironmentsPaged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvironmentsPaged.Merge(m, src)
}
func (m *EnvironmentsPaged) XXX_Size() int {
	return m.Size()
}
func (m *EnvironmentsPaged) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvironmentsPaged.DiscardUnknown(m)
}

var xxx_messageInfo_EnvironmentsPaged proto.InternalMessageInfo

func (m *EnvironmentsPaged) GetResults() []*Environment {
	if m != nil {
		return m.Results
	}
	return nil
}

func (*EnvironmentsPaged) XXX_MessageName() string {
	return "EnvironmentsPaged"
}

type Deployment struct {
	ID                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Service              string     `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Environment          string     `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	BuildNumber          string     `protobuf:"bytes,4,opt,name=build_number,proto3" json:"build_number,omitempty"`
	Created              *time.Time `protobuf:"bytes,5,opt,name=created,proto3,stdtime" json:"created,omitempty"`
	Updated              *time.Time `protobuf:"bytes,6,opt,name=updated,proto3,stdtime" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Deployment) Reset()         { *m = Deployment{} }
func (m *Deployment) String() string { return proto.CompactTextString(m) }
func (*Deployment) ProtoMessage()    {}
func (*Deployment) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{5}
}
func (m *Deployment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Deployment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Deployment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Deployment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deployment.Merge(m, src)
}
func (m *Deployment) XXX_Size() int {
	return m.Size()
}
func (m *Deployment) XXX_DiscardUnknown() {
	xxx_messageInfo_Deployment.DiscardUnknown(m)
}

var xxx_messageInfo_Deployment proto.InternalMessageInfo

func (m *Deployment) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Deployment) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Deployment) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *Deployment) GetBuildNumber() string {
	if m != nil {
		return m.BuildNumber
	}
	return ""
}

func (m *Deployment) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Deployment) GetUpdated() *time.Time {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (*Deployment) XXX_MessageName() string {
	return "Deployment"
}

type DeploymentsPaged struct {
	Results              []*Deployment `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Page                 int32         `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32         `protobuf:"varint,3,opt,name=page_size,proto3" json:"page_size,omitempty"`
	Total                int32         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Links                *Links        `protobuf:"bytes,5,opt,name=links,proto3" json:"links,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeploymentsPaged) Reset()         { *m = DeploymentsPaged{} }
func (m *DeploymentsPaged) String() string { return proto.CompactTextString(m) }
func (*DeploymentsPaged) ProtoMessage()    {}
func (*DeploymentsPaged) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{6}
}
func (m *DeploymentsPaged) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeploymentsPaged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeploymentsPaged.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeploymentsPaged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentsPaged.Merge(m, src)
}
func (m *DeploymentsPaged) XXX_Size() int {
	return m.Size()
}
func (m *DeploymentsPaged) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentsPaged.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentsPaged proto.InternalMessageInfo

func (m *DeploymentsPaged) GetResults() []*Deployment {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *DeploymentsPaged) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *DeploymentsPaged) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *DeploymentsPaged) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *DeploymentsPaged) GetLinks() *Links {
	if m != nil {
		return m.Links
	}
	return nil
}

func (*DeploymentsPaged) XXX_MessageName() string {
	return "DeploymentsPaged"
}

type GetEnvironmentsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEnvironmentsRequest) Reset()         { *m = GetEnvironmentsRequest{} }
func (m *GetEnvironmentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetEnvironmentsRequest) ProtoMessage()    {}
func (*GetEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{7}
}
func (m *GetEnvironmentsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetEnvironmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetEnvironmentsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetEnvironmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEnvironmentsRequest.Merge(m, src)
}
func (m *GetEnvironmentsRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetEnvironmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEnvironmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEnvironmentsRequest proto.InternalMessageInfo

func (*GetEnvironmentsRequest) XXX_MessageName() string {
	return "GetEnvironmentsRequest"
}

type GetDeploymentsRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize             int32    `protobuf:"varint,2,opt,name=page_size,proto3" json:"page_size,omitempty"`
	Environment          string   `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	Service              string   `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeploymentsRequest) Reset()         { *m = GetDeploymentsRequest{} }
func (m *GetDeploymentsRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeploymentsRequest) ProtoMessage()    {}
func (*GetDeploymentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{8}
}
func (m *GetDeploymentsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetDeploymentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetDeploymentsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetDeploymentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeploymentsRequest.Merge(m, src)
}
func (m *GetDeploymentsRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetDeploymentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeploymentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeploymentsRequest proto.InternalMessageInfo

func (m *GetDeploymentsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetDeploymentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetDeploymentsRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *GetDeploymentsRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (*GetDeploymentsRequest) XXX_MessageName() string {
	return "GetDeploymentsRequest"
}

type Links struct {
	Next                 string   `protobuf:"bytes,1,opt,name=next,proto3" json:"next,omitempty"`
	Prev                 string   `protobuf:"bytes,2,opt,name=prev,proto3" json:"prev,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Links) Reset()         { *m = Links{} }
func (m *Links) String() string { return proto.CompactTextString(m) }
func (*Links) ProtoMessage()    {}
func (*Links) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b231d8049a365af, []int{9}
}
func (m *Links) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Links) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Links.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Links) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Links.Merge(m, src)
}
func (m *Links) XXX_Size() int {
	return m.Size()
}
func (m *Links) XXX_DiscardUnknown() {
	xxx_messageInfo_Links.DiscardUnknown(m)
}

var xxx_messageInfo_Links proto.InternalMessageInfo

func (m *Links) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func (m *Links) GetPrev() string {
	if m != nil {
		return m.Prev
	}
	return ""
}

func (*Links) XXX_MessageName() string {
	return "Links"
}
func init() {
	proto.RegisterType((*Service)(nil), "Service")
	golang_proto.RegisterType((*Service)(nil), "Service")
	proto.RegisterType((*GetServicesRequest)(nil), "GetServicesRequest")
	golang_proto.RegisterType((*GetServicesRequest)(nil), "GetServicesRequest")
	proto.RegisterType((*ServicesPaged)(nil), "ServicesPaged")
	golang_proto.RegisterType((*ServicesPaged)(nil), "ServicesPaged")
	proto.RegisterType((*Environment)(nil), "Environment")
	golang_proto.RegisterType((*Environment)(nil), "Environment")
	proto.RegisterType((*EnvironmentsPaged)(nil), "EnvironmentsPaged")
	golang_proto.RegisterType((*EnvironmentsPaged)(nil), "EnvironmentsPaged")
	proto.RegisterType((*Deployment)(nil), "Deployment")
	golang_proto.RegisterType((*Deployment)(nil), "Deployment")
	proto.RegisterType((*DeploymentsPaged)(nil), "DeploymentsPaged")
	golang_proto.RegisterType((*DeploymentsPaged)(nil), "DeploymentsPaged")
	proto.RegisterType((*GetEnvironmentsRequest)(nil), "GetEnvironmentsRequest")
	golang_proto.RegisterType((*GetEnvironmentsRequest)(nil), "GetEnvironmentsRequest")
	proto.RegisterType((*GetDeploymentsRequest)(nil), "GetDeploymentsRequest")
	golang_proto.RegisterType((*GetDeploymentsRequest)(nil), "GetDeploymentsRequest")
	proto.RegisterType((*Links)(nil), "Links")
	golang_proto.RegisterType((*Links)(nil), "Links")
}

func init() { proto.RegisterFile("servicestatus.proto", fileDescriptor_3b231d8049a365af) }
func init() { golang_proto.RegisterFile("servicestatus.proto", fileDescriptor_3b231d8049a365af) }

var fileDescriptor_3b231d8049a365af = []byte{
	// 1037 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x6f, 0xe3, 0x44,
	0x14, 0xd7, 0x38, 0x75, 0xd2, 0xbe, 0x74, 0x97, 0x66, 0x76, 0xb7, 0xb5, 0xac, 0x2a, 0xb5, 0x2c,
	0x3e, 0xba, 0x85, 0xd8, 0x34, 0x48, 0x1c, 0x12, 0x10, 0xfd, 0x58, 0x36, 0x54, 0xda, 0x43, 0xe5,
	0x85, 0x0b, 0x97, 0x95, 0x13, 0xcf, 0x3a, 0x56, 0x13, 0x8f, 0xd7, 0x9e, 0xa4, 0x0d, 0xab, 0x15,
	0x02, 0x09, 0x71, 0x45, 0x70, 0xe2, 0xc4, 0x99, 0x3f, 0x80, 0x3b, 0xc7, 0x3d, 0x22, 0x21, 0x71,
	0x04, 0xd4, 0xf2, 0x1f, 0x70, 0xe5, 0x80, 0x3c, 0x1e, 0x27, 0x93, 0x0f, 0x96, 0xad, 0x0a, 0x7b,
	0xca, 0x7b, 0x93, 0xf7, 0xde, 0xef, 0xcd, 0xef, 0xf7, 0xc6, 0x33, 0x70, 0x23, 0x21, 0xf1, 0x30,
	0xe8, 0x90, 0x84, 0xb9, 0x6c, 0x90, 0x58, 0x51, 0x4c, 0x19, 0xd5, 0xb7, 0x7c, 0x4a, 0xfd, 0x1e,
	0xb1, 0xb9, 0xd7, 0x1e, 0x3c, 0xb4, 0x59, 0xd0, 0x4f, 0x23, 0xfa, 0x91, 0x08, 0xd8, 0x14, 0x01,
	0x6e, 0x14, 0xd8, 0x6e, 0x18, 0x52, 0xe6, 0xb2, 0x80, 0x86, 0x79, 0xfa, 0x1b, 0xfc, 0xa7, 0x53,
	0xf3, 0x49, 0x58, 0x4b, 0x4e, 0x5d, 0xdf, 0x27, 0xb1, 0x4d, 0x23, 0x1e, 0xb1, 0x20, 0xba, 0xe6,
	0x07, 0xac, 0x3b, 0x68, 0x5b, 0x1d, 0xda, 0xb7, 0x7d, 0xea, 0xd3, 0x09, 0x6a, 0xea, 0x71, 0x87,
	0x5b, 0x22, 0xfc, 0x6d, 0x29, 0xbc, 0x7f, 0x1a, 0xb0, 0x13, 0x7a, 0x6a, 0xfb, 0xb4, 0xc6, 0xff,
	0xac, 0x0d, 0xdd, 0x5e, 0xe0, 0xb9, 0x8c, 0xc6, 0x89, 0x3d, 0x36, 0xb3, 0x3c, 0xf3, 0x4b, 0x05,
	0x4a, 0xf7, 0xb3, 0xbd, 0x62, 0x0c, 0x4b, 0xa1, 0xdb, 0x27, 0x1a, 0x32, 0xd0, 0xf6, 0x8a, 0xc3,
	0x6d, 0xac, 0xc3, 0xf2, 0xc3, 0x38, 0x20, 0xa1, 0xd7, 0x1b, 0x69, 0x0a, 0x5f, 0x1f, 0xfb, 0x78,
	0x1d, 0x8a, 0x6e, 0x87, 0x05, 0x43, 0xa2, 0x15, 0x0c, 0xb4, 0xbd, 0xec, 0x08, 0x2f, 0x5d, 0xcf,
	0x78, 0xd3, 0x96, 0x78, 0x86, 0xf0, 0xd2, 0xfa, 0x09, 0x8d, 0x99, 0xa6, 0x1a, 0x68, 0x5b, 0x75,
	0xb8, 0x8d, 0xd7, 0xa0, 0x70, 0x42, 0x46, 0x5a, 0x91, 0x07, 0xa6, 0x26, 0x6e, 0x40, 0xa9, 0x13,
	0x13, 0x97, 0x11, 0x4f, 0x2b, 0x19, 0x68, 0xbb, 0x5c, 0xd7, 0xad, 0x8c, 0x56, 0x2b, 0x67, 0xc0,
	0xfa, 0x30, 0xe7, 0xfd, 0x60, 0xe9, 0xab, 0xdf, 0xb6, 0x90, 0x93, 0x27, 0xa4, 0xb9, 0x83, 0xc8,
	0xe3, 0xb9, 0xcb, 0xcf, 0x9b, 0x2b, 0x12, 0xcc, 0x2e, 0xe0, 0x16, 0x61, 0x82, 0x8b, 0xc4, 0x21,
	0x8f, 0x06, 0x24, 0x61, 0x69, 0xcf, 0x91, 0xeb, 0x67, 0x9c, 0xa8, 0x0e, 0xb7, 0xf1, 0x26, 0xac,
	0xa4, 0xbf, 0x0f, 0x92, 0xe0, 0x13, 0xc2, 0x49, 0x51, 0x9d, 0xc9, 0x02, 0x36, 0xa0, 0x4c, 0xc2,
	0x61, 0x10, 0xd3, 0xb0, 0x4f, 0x42, 0xc6, 0xa9, 0x59, 0x71, 0xe4, 0x25, 0xf3, 0x5b, 0x04, 0xd7,
	0x72, 0x9c, 0x63, 0xd7, 0x27, 0x1e, 0x36, 0xa1, 0x14, 0x93, 0x64, 0xd0, 0x63, 0x89, 0x86, 0x8c,
	0xc2, 0x76, 0xb9, 0xbe, 0x6c, 0x89, 0x00, 0x27, 0xff, 0x63, 0xdc, 0x89, 0xf2, 0x4f, 0x9d, 0x14,
	0x66, 0x3b, 0xb9, 0x09, 0x2a, 0xa3, 0xcc, 0xed, 0x71, 0x19, 0x54, 0x27, 0x73, 0xf0, 0x26, 0xa8,
	0xbd, 0x20, 0x3c, 0x49, 0xb8, 0x0c, 0xe5, 0x7a, 0xd1, 0xba, 0x97, 0x7a, 0x4e, 0xb6, 0x68, 0xfe,
	0x89, 0xa0, 0xfc, 0xfe, 0xa4, 0xd7, 0xff, 0x6c, 0x26, 0x72, 0xed, 0x97, 0xe6, 0xb5, 0x57, 0x17,
	0x6a, 0x5f, 0xbc, 0x82, 0xf6, 0xa5, 0xcb, 0x6a, 0xdf, 0x84, 0x8a, 0xb4, 0x69, 0x21, 0xca, 0xab,
	0xb3, 0xa2, 0xac, 0x5a, 0x52, 0xd0, 0x58, 0x18, 0xf3, 0x2f, 0x04, 0x70, 0x87, 0x44, 0x3d, 0x3a,
	0xe2, 0x8c, 0xad, 0x83, 0x12, 0x78, 0x19, 0x5f, 0x07, 0xc5, 0xf3, 0x5f, 0xb7, 0x94, 0xa3, 0x3b,
	0x8e, 0x12, 0x78, 0x58, 0x83, 0x92, 0xf8, 0xa8, 0x08, 0xd2, 0x72, 0xf7, 0xdf, 0x27, 0x06, 0x9b,
	0xb0, 0xda, 0x1e, 0x04, 0x3d, 0xef, 0x41, 0x38, 0xe8, 0xb7, 0x49, 0x2c, 0xce, 0xd5, 0xd4, 0x9a,
	0xcc, 0x9d, 0x7a, 0x05, 0xee, 0x8a, 0x97, 0xe5, 0xee, 0x3b, 0x04, 0x6b, 0x93, 0xed, 0x0b, 0xee,
	0x5e, 0x99, 0xe5, 0xae, 0x6c, 0x4d, 0x62, 0x5e, 0xf4, 0x4c, 0x6b, 0xb0, 0xde, 0x22, 0x4c, 0x16,
	0x58, 0x9c, 0x6e, 0xf3, 0x0b, 0x04, 0xb7, 0x5a, 0x84, 0x49, 0xed, 0xff, 0x8f, 0xe7, 0x5e, 0x9e,
	0x80, 0xa5, 0xa9, 0x09, 0x30, 0x6d, 0x50, 0x79, 0xc7, 0xfc, 0xb8, 0x91, 0x33, 0x36, 0x3e, 0x6e,
	0xe4, 0x2c, 0x6b, 0x25, 0x26, 0x43, 0x31, 0x35, 0xdc, 0xae, 0x5f, 0x20, 0x58, 0x95, 0x37, 0x84,
	0x9b, 0x50, 0xd8, 0xf7, 0x3c, 0x3c, 0x35, 0xa2, 0xfa, 0x94, 0x67, 0x6a, 0x9f, 0xff, 0xfc, 0xc7,
	0x37, 0x0a, 0x36, 0xd7, 0xec, 0xe1, 0xae, 0x4d, 0xe4, 0xe4, 0x7b, 0x50, 0x68, 0x11, 0x86, 0x37,
	0xac, 0xc5, 0x34, 0xe9, 0xd8, 0x9a, 0x3b, 0x1d, 0x79, 0x35, 0x3c, 0x5f, 0xed, 0x03, 0x28, 0x7e,
	0xc4, 0x67, 0xe3, 0x99, 0xdd, 0x98, 0x3c, 0x7f, 0x53, 0xbf, 0x35, 0x93, 0x6f, 0x3f, 0x3e, 0x21,
	0xa3, 0x27, 0x8d, 0xf4, 0x73, 0x50, 0xff, 0xa1, 0x00, 0x65, 0x49, 0x1b, 0x7c, 0x94, 0xf5, 0xb9,
	0x6e, 0x2d, 0xd4, 0x4c, 0xaf, 0x58, 0xb3, 0x73, 0x68, 0x6e, 0x70, 0x94, 0x0a, 0x7e, 0x29, 0x45,
	0xf1, 0xa4, 0x52, 0x8f, 0xa0, 0xd2, 0x22, 0xec, 0x2e, 0x8d, 0xe5, 0x8f, 0xdd, 0x25, 0x0a, 0xef,
	0xf2, 0xc2, 0xaf, 0xe3, 0xdb, 0x73, 0xed, 0x4b, 0xce, 0x93, 0x29, 0xc8, 0x4f, 0xe1, 0x5a, 0x06,
	0x99, 0xdf, 0xb7, 0x97, 0x80, 0x3b, 0xe4, 0x70, 0xef, 0xe2, 0xe6, 0xb3, 0xe1, 0xc4, 0x3c, 0xd9,
	0x8f, 0x85, 0x31, 0xdd, 0x80, 0x9f, 0xcd, 0x88, 0x7c, 0x14, 0x75, 0xd9, 0x31, 0xef, 0x72, 0x94,
	0x3d, 0xf3, 0x2a, 0x28, 0x0d, 0xb4, 0x53, 0xff, 0x5e, 0x81, 0xe5, 0xfc, 0x82, 0xc3, 0xf5, 0x0c,
	0x75, 0x7c, 0xa3, 0xe9, 0x63, 0x2b, 0x57, 0xc7, 0x5c, 0x4d, 0xf1, 0xf2, 0x17, 0x57, 0x03, 0xed,
	0xe0, 0xbd, 0x4c, 0xe8, 0x1b, 0xd6, 0xfc, 0x8d, 0xac, 0x5f, 0xb7, 0xa6, 0xee, 0x4e, 0xf3, 0x26,
	0x2f, 0x72, 0x1d, 0x4f, 0x15, 0xc1, 0xc1, 0x22, 0x7d, 0x9f, 0xab, 0x9e, 0xcd, 0xeb, 0xdd, 0xc6,
	0xaf, 0xcd, 0x0e, 0xf6, 0x62, 0x16, 0x12, 0xfc, 0xce, 0x78, 0xde, 0x17, 0xed, 0xb1, 0xca, 0xcb,
	0x69, 0x7a, 0x45, 0x6a, 0x4f, 0x9a, 0xf1, 0x83, 0x5f, 0xd0, 0xd7, 0xfb, 0x9f, 0x21, 0xdc, 0x00,
	0x2c, 0x32, 0x8c, 0xfb, 0xfc, 0xb5, 0x64, 0xec, 0x1f, 0x1f, 0x99, 0x5b, 0x00, 0x87, 0x5d, 0xd7,
	0x33, 0x5a, 0xb1, 0x1b, 0x32, 0xbd, 0xd2, 0xe9, 0xba, 0x9e, 0xe5, 0xa7, 0xf6, 0x5e, 0x9f, 0xa4,
	0x4f, 0xbd, 0x7a, 0x61, 0xd7, 0x7a, 0x73, 0x47, 0x51, 0x50, 0xfc, 0x1e, 0x6c, 0xf8, 0xce, 0xf1,
	0xa1, 0x41, 0xce, 0xdc, 0x7e, 0xd4, 0x23, 0x46, 0x4c, 0x22, 0x9a, 0x04, 0x8c, 0xc6, 0x23, 0xfc,
	0x72, 0x97, 0xb1, 0x28, 0x69, 0xd8, 0xf6, 0xec, 0x8b, 0xd2, 0x8f, 0xa3, 0x4e, 0x4d, 0x24, 0x3c,
	0x3d, 0xaf, 0xa2, 0x9f, 0xce, 0xab, 0xe8, 0xf7, 0xf3, 0x2a, 0xfa, 0xf1, 0xa2, 0x8a, 0x9e, 0x5e,
	0x54, 0xd1, 0xc7, 0x4d, 0x29, 0x23, 0xc5, 0xe6, 0xd0, 0xf9, 0x26, 0x6a, 0xd9, 0xab, 0x8e, 0x3f,
	0x76, 0x7d, 0x12, 0x92, 0x38, 0xbd, 0x0d, 0x9a, 0x63, 0xab, 0x5d, 0xe4, 0x57, 0xc7, 0x5b, 0x7f,
	0x07, 0x00, 0x00, 0xff, 0xff, 0x17, 0xe0, 0x15, 0x13, 0x4b, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EnvironmentsClient is the client API for Environments service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EnvironmentsClient interface {
	Add(ctx context.Context, in *Environment, opts ...grpc.CallOption) (*Environment, error)
	Get(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*EnvironmentsPaged, error)
	Update(ctx context.Context, in *Environment, opts ...grpc.CallOption) (*Environment, error)
}

type environmentsClient struct {
	cc *grpc.ClientConn
}

func NewEnvironmentsClient(cc *grpc.ClientConn) EnvironmentsClient {
	return &environmentsClient{cc}
}

func (c *environmentsClient) Add(ctx context.Context, in *Environment, opts ...grpc.CallOption) (*Environment, error) {
	out := new(Environment)
	err := c.cc.Invoke(ctx, "/Environments/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentsClient) Get(ctx context.Context, in *GetEnvironmentsRequest, opts ...grpc.CallOption) (*EnvironmentsPaged, error) {
	out := new(EnvironmentsPaged)
	err := c.cc.Invoke(ctx, "/Environments/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentsClient) Update(ctx context.Context, in *Environment, opts ...grpc.CallOption) (*Environment, error) {
	out := new(Environment)
	err := c.cc.Invoke(ctx, "/Environments/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnvironmentsServer is the server API for Environments service.
type EnvironmentsServer interface {
	Add(context.Context, *Environment) (*Environment, error)
	Get(context.Context, *GetEnvironmentsRequest) (*EnvironmentsPaged, error)
	Update(context.Context, *Environment) (*Environment, error)
}

// UnimplementedEnvironmentsServer can be embedded to have forward compatible implementations.
type UnimplementedEnvironmentsServer struct {
}

func (*UnimplementedEnvironmentsServer) Add(ctx context.Context, req *Environment) (*Environment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedEnvironmentsServer) Get(ctx context.Context, req *GetEnvironmentsRequest) (*EnvironmentsPaged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedEnvironmentsServer) Update(ctx context.Context, req *Environment) (*Environment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterEnvironmentsServer(s *grpc.Server, srv EnvironmentsServer) {
	s.RegisterService(&_Environments_serviceDesc, srv)
}

func _Environments_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Environment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentsServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environments/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentsServer).Add(ctx, req.(*Environment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Environments_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEnvironmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environments/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentsServer).Get(ctx, req.(*GetEnvironmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Environments_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Environment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environments/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentsServer).Update(ctx, req.(*Environment))
	}
	return interceptor(ctx, in, info, handler)
}

var _Environments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Environments",
	HandlerType: (*EnvironmentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Environments_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Environments_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Environments_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "servicestatus.proto",
}

// DeploymentsClient is the client API for Deployments service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeploymentsClient interface {
	Get(ctx context.Context, in *GetDeploymentsRequest, opts ...grpc.CallOption) (*DeploymentsPaged, error)
	GetForEnvironment(ctx context.Context, in *GetDeploymentsRequest, opts ...grpc.CallOption) (*DeploymentsPaged, error)
	GetForService(ctx context.Context, in *GetDeploymentsRequest, opts ...grpc.CallOption) (*DeploymentsPaged, error)
	Add(ctx context.Context, in *Deployment, opts ...grpc.CallOption) (*Deployment, error)
}

type deploymentsClient struct {
	cc *grpc.ClientConn
}

func NewDeploymentsClient(cc *grpc.ClientConn) DeploymentsClient {
	return &deploymentsClient{cc}
}

func (c *deploymentsClient) Get(ctx context.Context, in *GetDeploymentsRequest, opts ...grpc.CallOption) (*DeploymentsPaged, error) {
	out := new(DeploymentsPaged)
	err := c.cc.Invoke(ctx, "/Deployments/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentsClient) GetForEnvironment(ctx context.Context, in *GetDeploymentsRequest, opts ...grpc.CallOption) (*DeploymentsPaged, error) {
	out := new(DeploymentsPaged)
	err := c.cc.Invoke(ctx, "/Deployments/GetForEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentsClient) GetForService(ctx context.Context, in *GetDeploymentsRequest, opts ...grpc.CallOption) (*DeploymentsPaged, error) {
	out := new(DeploymentsPaged)
	err := c.cc.Invoke(ctx, "/Deployments/GetForService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deploymentsClient) Add(ctx context.Context, in *Deployment, opts ...grpc.CallOption) (*Deployment, error) {
	out := new(Deployment)
	err := c.cc.Invoke(ctx, "/Deployments/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeploymentsServer is the server API for Deployments service.
type DeploymentsServer interface {
	Get(context.Context, *GetDeploymentsRequest) (*DeploymentsPaged, error)
	GetForEnvironment(context.Context, *GetDeploymentsRequest) (*DeploymentsPaged, error)
	GetForService(context.Context, *GetDeploymentsRequest) (*DeploymentsPaged, error)
	Add(context.Context, *Deployment) (*Deployment, error)
}

// UnimplementedDeploymentsServer can be embedded to have forward compatible implementations.
type UnimplementedDeploymentsServer struct {
}

func (*UnimplementedDeploymentsServer) Get(ctx context.Context, req *GetDeploymentsRequest) (*DeploymentsPaged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDeploymentsServer) GetForEnvironment(ctx context.Context, req *GetDeploymentsRequest) (*DeploymentsPaged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetForEnvironment not implemented")
}
func (*UnimplementedDeploymentsServer) GetForService(ctx context.Context, req *GetDeploymentsRequest) (*DeploymentsPaged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetForService not implemented")
}
func (*UnimplementedDeploymentsServer) Add(ctx context.Context, req *Deployment) (*Deployment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}

func RegisterDeploymentsServer(s *grpc.Server, srv DeploymentsServer) {
	s.RegisterService(&_Deployments_serviceDesc, srv)
}

func _Deployments_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Deployments/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).Get(ctx, req.(*GetDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployments_GetForEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).GetForEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Deployments/GetForEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).GetForEnvironment(ctx, req.(*GetDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployments_GetForService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeploymentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).GetForService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Deployments/GetForService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).GetForService(ctx, req.(*GetDeploymentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deployments_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Deployment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentsServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Deployments/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentsServer).Add(ctx, req.(*Deployment))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deployments_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Deployments",
	HandlerType: (*DeploymentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Deployments_Get_Handler,
		},
		{
			MethodName: "GetForEnvironment",
			Handler:    _Deployments_GetForEnvironment_Handler,
		},
		{
			MethodName: "GetForService",
			Handler:    _Deployments_GetForService_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _Deployments_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "servicestatus.proto",
}

// ServicesClient is the client API for Services service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServicesClient interface {
	Add(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Service, error)
	Get(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*ServicesPaged, error)
	GetForEnvironment(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*ServicesPaged, error)
	Update(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Service, error)
}

type servicesClient struct {
	cc *grpc.ClientConn
}

func NewServicesClient(cc *grpc.ClientConn) ServicesClient {
	return &servicesClient{cc}
}

func (c *servicesClient) Add(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := c.cc.Invoke(ctx, "/Services/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) Get(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*ServicesPaged, error) {
	out := new(ServicesPaged)
	err := c.cc.Invoke(ctx, "/Services/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) GetForEnvironment(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*ServicesPaged, error) {
	out := new(ServicesPaged)
	err := c.cc.Invoke(ctx, "/Services/GetForEnvironment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) Update(ctx context.Context, in *Service, opts ...grpc.CallOption) (*Service, error) {
	out := new(Service)
	err := c.cc.Invoke(ctx, "/Services/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServicesServer is the server API for Services service.
type ServicesServer interface {
	Add(context.Context, *Service) (*Service, error)
	Get(context.Context, *GetServicesRequest) (*ServicesPaged, error)
	GetForEnvironment(context.Context, *GetServicesRequest) (*ServicesPaged, error)
	Update(context.Context, *Service) (*Service, error)
}

// UnimplementedServicesServer can be embedded to have forward compatible implementations.
type UnimplementedServicesServer struct {
}

func (*UnimplementedServicesServer) Add(ctx context.Context, req *Service) (*Service, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedServicesServer) Get(ctx context.Context, req *GetServicesRequest) (*ServicesPaged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedServicesServer) GetForEnvironment(ctx context.Context, req *GetServicesRequest) (*ServicesPaged, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetForEnvironment not implemented")
}
func (*UnimplementedServicesServer) Update(ctx context.Context, req *Service) (*Service, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterServicesServer(s *grpc.Server, srv ServicesServer) {
	s.RegisterService(&_Services_serviceDesc, srv)
}

func _Services_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Services/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).Add(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Services/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).Get(ctx, req.(*GetServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_GetForEnvironment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).GetForEnvironment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Services/GetForEnvironment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).GetForEnvironment(ctx, req.(*GetServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Service)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Services/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).Update(ctx, req.(*Service))
	}
	return interceptor(ctx, in, info, handler)
}

var _Services_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Services",
	HandlerType: (*ServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Services_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Services_Get_Handler,
		},
		{
			MethodName: "GetForEnvironment",
			Handler:    _Services_GetForEnvironment_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Services_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "servicestatus.proto",
}

func (m *Service) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Service) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Service) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Updated != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.Updated, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.Updated):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintServicestatus(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x42
	}
	if m.Created != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.Created, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.Created):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintServicestatus(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x32
	}
	if m.Sort != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.Sort))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x22
	}
	if m.Active {
		i--
		if m.Active {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Friendly) > 0 {
		i -= len(m.Friendly)
		copy(dAtA[i:], m.Friendly)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Friendly)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetServicesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetServicesRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetServicesRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Environment) > 0 {
		i -= len(m.Environment)
		copy(dAtA[i:], m.Environment)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Environment)))
		i--
		dAtA[i] = 0x1a
	}
	if m.PageSize != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.Page != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ServicesPaged) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServicesPaged) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ServicesPaged) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Links != nil {
		{
			size, err := m.Links.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServicestatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Total != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x20
	}
	if m.PageSize != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServicestatus(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Environment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Environment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Environment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Updated != nil {
		n4, err4 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.Updated, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.Updated):])
		if err4 != nil {
			return 0, err4
		}
		i -= n4
		i = encodeVarintServicestatus(dAtA, i, uint64(n4))
		i--
		dAtA[i] = 0x3a
	}
	if m.Created != nil {
		n5, err5 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.Created, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.Created):])
		if err5 != nil {
			return 0, err5
		}
		i -= n5
		i = encodeVarintServicestatus(dAtA, i, uint64(n5))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Sort != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.Sort))
		i--
		dAtA[i] = 0x20
	}
	if m.Active {
		i--
		if m.Active {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Friendly) > 0 {
		i -= len(m.Friendly)
		copy(dAtA[i:], m.Friendly)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Friendly)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EnvironmentsPaged) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnvironmentsPaged) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EnvironmentsPaged) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServicestatus(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Deployment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Deployment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Deployment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Updated != nil {
		n6, err6 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.Updated, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.Updated):])
		if err6 != nil {
			return 0, err6
		}
		i -= n6
		i = encodeVarintServicestatus(dAtA, i, uint64(n6))
		i--
		dAtA[i] = 0x32
	}
	if m.Created != nil {
		n7, err7 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.Created, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.Created):])
		if err7 != nil {
			return 0, err7
		}
		i -= n7
		i = encodeVarintServicestatus(dAtA, i, uint64(n7))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BuildNumber) > 0 {
		i -= len(m.BuildNumber)
		copy(dAtA[i:], m.BuildNumber)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.BuildNumber)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Environment) > 0 {
		i -= len(m.Environment)
		copy(dAtA[i:], m.Environment)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Environment)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Service) > 0 {
		i -= len(m.Service)
		copy(dAtA[i:], m.Service)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Service)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeploymentsPaged) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeploymentsPaged) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeploymentsPaged) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Links != nil {
		{
			size, err := m.Links.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServicestatus(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Total != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x20
	}
	if m.PageSize != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x18
	}
	if m.Page != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServicestatus(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetEnvironmentsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetEnvironmentsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetEnvironmentsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetDeploymentsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDeploymentsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetDeploymentsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Service) > 0 {
		i -= len(m.Service)
		copy(dAtA[i:], m.Service)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Service)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Environment) > 0 {
		i -= len(m.Environment)
		copy(dAtA[i:], m.Environment)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Environment)))
		i--
		dAtA[i] = 0x1a
	}
	if m.PageSize != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.Page != 0 {
		i = encodeVarintServicestatus(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Links) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Links) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Links) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Prev) > 0 {
		i -= len(m.Prev)
		copy(dAtA[i:], m.Prev)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Prev)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Next) > 0 {
		i -= len(m.Next)
		copy(dAtA[i:], m.Next)
		i = encodeVarintServicestatus(dAtA, i, uint64(len(m.Next)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintServicestatus(dAtA []byte, offset int, v uint64) int {
	offset -= sovServicestatus(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Service) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	l = len(m.Friendly)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Active {
		n += 2
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Sort != 0 {
		n += 1 + sovServicestatus(uint64(m.Sort))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Created != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.Created)
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Updated != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.Updated)
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetServicesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovServicestatus(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovServicestatus(uint64(m.PageSize))
	}
	l = len(m.Environment)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ServicesPaged) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovServicestatus(uint64(l))
		}
	}
	if m.Page != 0 {
		n += 1 + sovServicestatus(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovServicestatus(uint64(m.PageSize))
	}
	if m.Total != 0 {
		n += 1 + sovServicestatus(uint64(m.Total))
	}
	if m.Links != nil {
		l = m.Links.Size()
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Environment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	l = len(m.Friendly)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Active {
		n += 2
	}
	if m.Sort != 0 {
		n += 1 + sovServicestatus(uint64(m.Sort))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Created != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.Created)
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Updated != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.Updated)
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EnvironmentsPaged) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovServicestatus(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Deployment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	l = len(m.Service)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	l = len(m.Environment)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	l = len(m.BuildNumber)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Created != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.Created)
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.Updated != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.Updated)
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeploymentsPaged) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovServicestatus(uint64(l))
		}
	}
	if m.Page != 0 {
		n += 1 + sovServicestatus(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovServicestatus(uint64(m.PageSize))
	}
	if m.Total != 0 {
		n += 1 + sovServicestatus(uint64(m.Total))
	}
	if m.Links != nil {
		l = m.Links.Size()
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetEnvironmentsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetDeploymentsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovServicestatus(uint64(m.Page))
	}
	if m.PageSize != 0 {
		n += 1 + sovServicestatus(uint64(m.PageSize))
	}
	l = len(m.Environment)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	l = len(m.Service)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Links) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Next)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	l = len(m.Prev)
	if l > 0 {
		n += 1 + l + sovServicestatus(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovServicestatus(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozServicestatus(x uint64) (n int) {
	return sovServicestatus(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Service) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Service: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Service: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friendly", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Friendly = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Active = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sort", wireType)
			}
			m.Sort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sort |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Created == nil {
				m.Created = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Updated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Updated == nil {
				m.Updated = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.Updated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetServicesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetServicesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetServicesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Environment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServicesPaged) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServicesPaged: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServicesPaged: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &Service{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Links", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Links == nil {
				m.Links = &Links{}
			}
			if err := m.Links.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Environment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Environment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Environment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Friendly", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Friendly = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Active = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sort", wireType)
			}
			m.Sort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Sort |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Created == nil {
				m.Created = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Updated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Updated == nil {
				m.Updated = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.Updated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EnvironmentsPaged) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnvironmentsPaged: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnvironmentsPaged: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &Environment{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Deployment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Deployment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Deployment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Service = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Environment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuildNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuildNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Created == nil {
				m.Created = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Updated", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Updated == nil {
				m.Updated = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.Updated, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeploymentsPaged) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeploymentsPaged: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeploymentsPaged: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &Deployment{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Links", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Links == nil {
				m.Links = &Links{}
			}
			if err := m.Links.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetEnvironmentsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetEnvironmentsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetEnvironmentsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDeploymentsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDeploymentsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDeploymentsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Environment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Service = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Links) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Links: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Links: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Next", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Next = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prev", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServicestatus
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServicestatus
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prev = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServicestatus(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthServicestatus
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipServicestatus(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowServicestatus
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServicestatus
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthServicestatus
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupServicestatus
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthServicestatus
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthServicestatus        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowServicestatus          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupServicestatus = fmt.Errorf("proto: unexpected end of group")
)
